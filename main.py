import telebot
from telebot import types

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '6592904765:AAEg2zgzujZnosLqkB1-u9f9Y2xoDRbyb5U'

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
users = {}


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def create_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_profile = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å')
    btn_invite = types.KeyboardButton('–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å')
    btn_stats = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    btn_withdraw = types.KeyboardButton('–í—ã–≤–µ—Å—Ç–∏ USDT')
    btn_support = types.KeyboardButton('–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    markup.row(btn_profile, btn_invite)
    markup.row(btn_stats, btn_withdraw)
    markup.row(btn_support)
    return markup


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    referral_id = message.text.split()[1] if len(message.text.split()) > 1 else None

    if user_id not in users:
        users[user_id] = {'invited': 0, 'balance_usdt': 0, 'referral_id': referral_id, 'invited_by': None}

    if referral_id and referral_id != str(user_id):
        if referral_id in users:
            users[referral_id]['invited'] += 1
            users[user_id]['invited_by'] = referral_id
            users[referral_id]['balance_usdt'] += 0.05  # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
            bot.send_message(referral_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –ø–µ—Ä–µ—à—ë–ª –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ!")

    bot.send_message(user_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ó–æ–ª–æ—Ç–æ–π –ë–æ—Ç!", reply_markup=create_main_menu())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞"
@bot.message_handler(func=lambda message: message.text == '–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
def tech_support(message):
    user_id = message.from_user.id
    bot.send_message(user_id,
                     "üîò –û–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ (–ø—Ä–∏–ª–æ–∂–∏–≤ —Å–∫—Ä–∏–Ω—ã, –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ) –∏ –º—ã –≤–∞–º –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í—ã–¥–∞—Ç—å USDT"
@bot.message_handler(func=lambda message: message.text == '–í—ã–¥–∞—Ç—å USDT')
def reward_user(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É USDT –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å: ")


@bot.message_handler(func=lambda message: message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π')
def referalls(message):
    user_id = message.from_user.id
    user_data = users.get(user_id, {})
    invited = user_data.get('invited', 0)
    bot.send_message(user_id, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {invited}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í—ã–≤–µ—Å—Ç–∏ USDT"
@bot.message_handler(func=lambda message: message.text == '–í—ã–≤–µ—Å—Ç–∏ USDT')
def withdraw_usdt(message):
    user_id = message.from_user.id
    user_data = users.get(user_id, {})
    balance_usdt = user_data.get('balance_usdt', 0)

    if balance_usdt < 1:
        bot.send_message(user_id, f"–£ –≤–∞—Å –Ω–∞ —Å—á–µ—Ç—É {balance_usdt} USDT. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ - 1 USDT.",
                         reply_markup=create_main_menu())
        return

    # –õ–æ–≥–∏–∫–∞ –≤—ã–≤–æ–¥–∞ USDT –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    admin_message = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –≤—ã–≤–æ–¥ {balance_usdt} USDT."
    bot.send_message(user_id, "–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –ø—Ä–∏–Ω—è—Ç. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.", reply_markup=create_main_menu())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
@bot.message_handler(func=lambda message: message.text == '–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç')
def delete_account(message):
    user_id = message.from_user.id
    if user_id in users:
        del users[user_id]
        bot.send_message(user_id, "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã.")
    else:
        bot.send_message(user_id, "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å"
@bot.message_handler(func=lambda message: message.text == '–ü—Ä–æ—Ñ–∏–ª—å')
def profile(message):
    user_id = message.from_user.id
    user_data = users.get(user_id, {})
    invited = user_data.get('invited', 0)
    balance_usdt = user_data.get('balance_usdt', 0)
    profile_info = (
        f"–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        f"ID: {user_id}\n"
        f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ª—é–¥–µ–π: {invited}\n"
        f"–ë–∞–ª–∞–Ω—Å: {balance_usdt} USDT"
    )
    bot.send_message(user_id, profile_info, reply_markup=create_main_menu())

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å"
    @bot.message_handler(func=lambda message: message.text == '–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å')
    def invite(message):
        user_id = message.from_user.id
        user_data = users.get(user_id, {})
        invited = user_data.get('invited', 0)
        referral_link = f"https://t.me/Zolotoibot?start={user_id}"
        invite_text = (
            f"üíé –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å USDT –º–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—à–∞—è –¥—Ä—É–∑–µ–π –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –ø–æ —Å–≤–æ–µ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ\n\n"
            f"üõû –†–µ—Ñ.—Å—Å—ã–ª–∫–∞: {referral_link}\n\n"
            f"üë§ –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã: {invited}\n\n"
            f"‚≠êÔ∏è –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ 0.05 USDT"
        )
        bot.send_message(user_id, invite_text, reply_markup=create_main_menu())

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    @bot.message_handler(func=lambda message: message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    def bot_stats(message):
        user_id = message.from_user.id
        total_users = len(users)
        total_invited = sum(user['invited'] for user in users.values())
        total_balance = sum(user['balance_usdt'] for user in users.values())
        stats_info = (
            f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n"
            f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
            f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: {total_invited}\n"
            f"–û–±—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_balance} USDT"
        )
        bot.send_message(user_id, stats_info, reply_markup=create_main_menu())

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É
    @bot.message_handler(func=lambda message: True)
    def handle_message(message):
        user_id = message.from_user.id
        if message.text == '–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
            bot.send_message(user_id,
                             "üîò –û–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ (–ø—Ä–∏–ª–æ–∂–∏–≤ —Å–∫—Ä–∏–Ω—ã, –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ) –∏ –º—ã –≤–∞–º –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!")
        else:
            bot.send_message(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é.",
                             reply_markup=create_main_menu())

    # –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    if name == "main":
        bot.polling()